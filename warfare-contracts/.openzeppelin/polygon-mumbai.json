{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb155929284c3B0b6b6995B1f00CAbc03F4D3A48A",
    "txHash": "0xbddae17513763749bad1893e254d23852dbb987e4c79ec9193b22dbb7bb5cc70"
  },
  "proxies": [
    {
      "address": "0x13E1EB072a7fB09d1de70F9dc9533A84b562C8a5",
      "txHash": "0x99676ac06417a94c9132b29080cdbe001b6d5d09535b7e067a676a3e80254c77",
      "kind": "transparent"
    },
    {
      "address": "0xA7968F9fDe1BA358Ed1e441C650099211b903a3a",
      "txHash": "0x86e51a51b098c0e5f99f0bf50aa6c2b684199ebd5e84a90211579ddf72752c34",
      "kind": "transparent"
    },
    {
      "address": "0x44e7A4F0f3596b90a46aD3B68D7dB69471D256b2",
      "txHash": "0xa53dd2189ea9d425afa934a9c01502c32956926d93998e6f00a9c1f919c3a33e",
      "kind": "transparent"
    },
    {
      "address": "0xd9fE71C72fE3E61974d27229Fa81505a2ff7CED8",
      "txHash": "0x6e2b16b0358fd1c9a9fc38918ae24057360eb4dd2b5e4a6c3a07c5e84c369e09",
      "kind": "transparent"
    },
    {
      "address": "0x3013B5231DD6A7Ce9db5b88451b414a666061495",
      "txHash": "0x090071595f67d3adb355a5f6fe05751a431270cff95c62db4d66d13b4767bea3",
      "kind": "transparent"
    },
    {
      "address": "0xFd168B0D1A9b1FB2D941C168207eA7583F7a3371",
      "txHash": "0xdcd546512c0f1bcd011c4f78020be25c5818bae2ecde6f4f552095cdacafa1a2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "05f333e97fc31716818bfabceb7f93b3f470cf0812c25387890ef89df6df900b": {
      "address": "0x78c182C9B99cBcF189E8FB5E71D35d3E1AA7666E",
      "txHash": "0xc2e3737c2f4ec3576ce60ad09881685181e1b571a49a473a11bf8fab9eb23ed6",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "game",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/Ships.sol:8"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Ship)4021_storage)",
            "contract": "Ships",
            "src": "contracts/Ships.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Ship)4021_storage)": {
            "label": "mapping(uint256 => struct Ships.Ship)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Ship)4021_storage": {
            "label": "struct Ships.Ship",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "defense",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "special1",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "special2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "alive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0f8846ecb4470b40907e6894e6043af57ba5d8521e736867eeabd62a09b35381": {
      "address": "0xb40163a379827E7D5B8673962Ee08821A9EaEf46",
      "txHash": "0xd9165353c630fb69e718eda3584381908b1c56c56e2e2d794ef7ffce847a2ed8",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IShips)3290",
            "contract": "Game",
            "src": "contracts/Game.sol:29"
          },
          {
            "label": "nextGameId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "Game",
            "src": "contracts/Game.sol:30"
          },
          {
            "label": "matches",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(Match)3337_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:31"
          },
          {
            "label": "playerWaiting",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Game",
            "src": "contracts/Game.sol:32"
          },
          {
            "label": "teamWaiting",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)3_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IShips)3290": {
            "label": "contract IShips",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(Match)3337_storage)": {
            "label": "mapping(uint256 => struct Game.Match)",
            "numberOfBytes": "32"
          },
          "t_struct(Match)3337_storage": {
            "label": "struct Game.Match",
            "members": [
              {
                "label": "player1",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "team1",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "team2",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "turn",
                "type": "t_uint8",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "lastMoveAt",
                "type": "t_uint32",
                "offset": 1,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e8bd75ef071368693220eb6b68327ee2ec329291b00a700dec8206d87982ebd5": {
      "address": "0x68aec83aAc28b12bED35c88dC90618a5dDEb5bCc",
      "txHash": "0x91f8a015f870f13c6811c5b574a292b44ca538942a30ceace74f58a933b61d7b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "game",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/Ships.sol:8"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Ship)4209_storage)",
            "contract": "Ships",
            "src": "contracts/Ships.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Ship)4209_storage)": {
            "label": "mapping(uint256 => struct Ships.Ship)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Ship)4209_storage": {
            "label": "struct Ships.Ship",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "defense",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "special1",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "special2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "alive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "010670b9032bb6067bce269f76b0ca7828b627c5543850af515f51b3d6a7fd78": {
      "address": "0xD659Ad308eFB77932e223540c3C5A90cE7304577",
      "txHash": "0xda72173e5a88b6ac2d8655a051b6c2602caf6a561436c0f8172807eb281e88c3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IShips)3290",
            "contract": "Game",
            "src": "contracts/Game.sol:29"
          },
          {
            "label": "nextGameId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "Game",
            "src": "contracts/Game.sol:30"
          },
          {
            "label": "matches",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(Match)3343_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:31"
          },
          {
            "label": "playerWaiting",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Game",
            "src": "contracts/Game.sol:32"
          },
          {
            "label": "teamWaiting",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)3_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IShips)3290": {
            "label": "contract IShips",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(Match)3343_storage)": {
            "label": "mapping(uint256 => struct Game.Match)",
            "numberOfBytes": "32"
          },
          "t_struct(Match)3343_storage": {
            "label": "struct Game.Match",
            "members": [
              {
                "label": "player1",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "team1",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "team2",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "turn",
                "type": "t_uint8",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "lastMoveAt",
                "type": "t_uint32",
                "offset": 1,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e3a92bb381429df296813c62146aaa90095baa18953192a3eb70a0f4a492255f": {
      "address": "0x076107Bab606643c58d02B404932757CD5fB8A79",
      "txHash": "0x381ceda4f49d7248675ee0b069142cd4bd81d39fbb96665a3f875d35768783dc",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "game",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/Ships.sol:31"
          },
          {
            "label": "taikoBridge",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ITaikoBridgeContract)4971",
            "contract": "Ships",
            "src": "contracts/Ships.sol:32"
          },
          {
            "label": "currentBridgeSignalContract",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/Ships.sol:33"
          },
          {
            "label": "currentSisterContract",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/Ships.sol:35"
          },
          {
            "label": "heldNFT",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "Ships",
            "src": "contracts/Ships.sol:37"
          },
          {
            "label": "sisterContract",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Ships",
            "src": "contracts/Ships.sol:38"
          },
          {
            "label": "currentChainType",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "Ships",
            "src": "contracts/Ships.sol:39"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "Ships",
            "src": "contracts/Ships.sol:40"
          },
          {
            "label": "currentSisterChainId",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "Ships",
            "src": "contracts/Ships.sol:41"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(Ship)5030_storage)",
            "contract": "Ships",
            "src": "contracts/Ships.sol:64"
          },
          {
            "label": "shipTypes",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(ShipType)5045_storage)",
            "contract": "Ships",
            "src": "contracts/Ships.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ITaikoBridgeContract)4971": {
            "label": "contract ITaikoBridgeContract",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Ship)5030_storage)": {
            "label": "mapping(uint256 => struct Ships.Ship)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipType)5045_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Ship)5030_storage": {
            "label": "struct Ships.Ship",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "defense",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "special1",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "special2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "alive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(ShipType)5045_storage": {
            "label": "struct Ships.ShipType",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "defense",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "energy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "special1",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "special2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8de4835adaf4d201b9b1cb9e594ae6c368ad48401806b98a4b344be46d664474": {
      "address": "0x417b66C9055F36A577d37E118ebb1B93Be8779c3",
      "txHash": "0xa02b49fdfa2d46abd1a4971ac07900460d83f16e6a6407e98256cebf15df2070",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IShips)3304",
            "contract": "Game",
            "src": "contracts/Game.sol:41"
          },
          {
            "label": "nextGameId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "Game",
            "src": "contracts/Game.sol:42"
          },
          {
            "label": "matches",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(Match)3381_storage)",
            "contract": "Game",
            "src": "contracts/Game.sol:43"
          },
          {
            "label": "playerWaiting",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Game",
            "src": "contracts/Game.sol:44"
          },
          {
            "label": "teamWaiting",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)3_storage",
            "contract": "Game",
            "src": "contracts/Game.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IShips)3304": {
            "label": "contract IShips",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(Match)3381_storage)": {
            "label": "mapping(uint256 => struct Game.Match)",
            "numberOfBytes": "32"
          },
          "t_struct(Match)3381_storage": {
            "label": "struct Game.Match",
            "members": [
              {
                "label": "player1",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "team1",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "team2",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "turn",
                "type": "t_uint8",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "lastMoveAt",
                "type": "t_uint32",
                "offset": 1,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
