import { ethers } from "hardhat";
import { Ships } from "../typechain-types";
// import typechain Ship struct

export async function testProof(shipsAddress: string) {
  let shipContract = (await ethers.getContractAt(
    "Ships",
    shipsAddress
  )) as Ships;

  const claim = await shipContract.claimNFT(
    "0x0363AA31FD5b7B273E3698F12c83fbDA92e74e85",
    "0x048a645062893f9153da1ffefbf9edbfdd373fecf764fbe41e77a50d00000001",
    ""
    // { gasLimit: 5000000 }
  );

  const receipt = await claim.wait();

  console.log(receipt);
}

if (require.main === module) {
  testProof("0xf22B98EE3B6E6fe2bDc1183b6804546B7c73273a")
    .then(() => process.exit(0))
    .catch((error) => {
      console.error(error);
      process.exit(1);
    });
}
